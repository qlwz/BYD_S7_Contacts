<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfSqiAXwqoAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBK6YFaiSOJ04c
        cDRwKJQOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQo
        qQeJJawwdieWUl8wfW9XNHQpeiycAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgSqmA4ocvC6PFrxUhyujU349mzuCMKQPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0roQN4K5sQeCqcCgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgSqsIXorpXp9IZ5qgiidLIQrpAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIctmxVsLoRUYyWDOXUj
        nwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHLagBjzC1UYIsrp54J5VGgCieBAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhiimAb8s
        oCCFK5VfYA6USFEKjAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcPrIJoEG+b4YjxXeDJLMbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAhiapAtEfyy+AIKyAbwmzN18ToQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYObETm0C4dYUh
        xmGDIbcPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmz3BJpQyyUKLN7IXAAAAAMVZ4kCwTdbUXBh+9yACL3t0K5ELAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYRrYBjT+qIII3oSaGN6UJAAAAAMxW3ijDVeTEeCSb/DQE
        Qq92KpMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjT6qCoY6ogqIOKYBAAAAAMdY
        1SLGVuW9iSav+kMFVcYnDDAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAL5dzCfDV97DkCK4/E8EZ8ZhInodAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALlSyjK9VNvOjiW5/WEEgpuCLqMRAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALdS11muWdffiC62134LrUGIMKoEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoFu+GbBu1IylW8+klSvFPoww
        sQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNOK0Cmlu7L6Bq
        ykKSRbYYjTevAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkDqvAZA6rwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////z8AAP/////+HwAA//////wP
        AAD/////+B8AAP///8f4PwAA////w/B/AAD///+D8P8AAP///4Pw/wAA////B/D/AAD///wP8P8AAP//
        8B/w/wAA///gP8D/AAD//+H/gf8AAP/8QfwB/wAA//wBkAI/AAD//AEABD8AAP/8AAAAfwAA//wAAAB/
        AAD/4AAAAf8AAP+AAAAB/wAA/wAAAAH/AAD/AAAAA/8AAP4AAAAA/wAA/AAAAAA/AAD4AAAAAB8AAPAA
        AAAADwAA4AAAAAAHAADgAQwAAAcAAOAODEAABwAA4B4eIAADAADAPh44AAEAAIB//j4AAQAAgP/+PwAh
        AAAB////gCAAAAH////AEAAAD////+ABAAAf////8AEAAB/////wBwAAn/////gDAAD/////+IMAAP//
        ///wgwAA//////iDAAD//////4MAAP//////gwAA//////+DAAD//////wcAAP/////+DwAA//////8/
        AAA=
</value>
  </data>
</root>